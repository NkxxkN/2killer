<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>The Killer</title>
  {{ style('style') }}
  <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-167446947-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-167446947-2');
</script>
</head>
<body style="background-color:{{backgroundColor}}">
  <section class="doc-section">
      <a class="subtitle rules-link" onclick="goBack()">Retour à la partie</a>

      <div class="title">Les règles du jeu du killer</div>
      <br/><br/>
      <p class="rules">
        Le Killer est un jeu se déroulant sur une longue durée. Idéal pour un week-end ou une semaine de vacances entre amis.
      </p>
      </br>
      <p class="rules">
        Au début de la partie chaque joueur renseigne un kill. Un bon kill est une action amusante, parfois contraignante, mais réalisable. Soyez créatif!
        Lorsque tous les joueurs sont prêts, chacun se voit attribuer un kill et une victime.
      </p>

      <p class="rules">
        Pour effectuer son kill, un joueur doit convaincre sa victime de réaliser l'action qui lui aura été attribuée.
        Lorsqu'un joueur effectue son kill, il récupère le kill et la victime de la personne qu'il vient de killer.
      </p>

      <p class="rules">
        Le but du jeu est simplement d'être le dernier survivant. 
      </p>

      <br/><br/>
      <br/><br/>

       <div class="title">Pourquoi utiliser une app?</div>
      <br/><br/>

      <p class="rules">
        L'attribution des kills ne peut pas s'effectuer de manière totalement aléatoire.
        Cela afin d'éviter d'obtenir plusieurs boucles dans le cas d'un tirage au sort totalement aléatoire.
      </p>

      <p class="rules">
        En effet dans une partie impliquant les joueurs A,B,C,D,E et F, un tirage au sort pourrait définir les kills suivants:</br>
        - A => D, D => E, E => A </br>
        - C => F, F => B, B => C</br></br>
        Dans cette configuration, il est impossible d'obtenir un vainqueur.</br>
      </p>

      <p class="rules">
         Originellement, il est nécessaire d'avoir un maitre du jeu se chargeant d'établir un cycle d'attribution des kills. 
         Cela afin d'éviter d'obtenir plusieurs boucles dans le cas d'un tirage au sort totalement aléatoire, comme décrite ci dessus.
         Le rôle du maitre du jeu s'arrète ici.
      </p>

      <p class="rules">
        C'est pour pallier à ce problème que nous avons décidé d'implémenter un algorithme de répartition permettant d'obtenir un cycle unique aléatoire.
        L'appli prend le rôle de maitre du jeu et personne n'est laissé de coté.
      </p>
        
      <p class="rules">
        La répartition se fait selon les charactéristiques suivantes:</br>
          - Un joueur ne peut pas obtenir son propre kill.</br>
          - Un joueur ne peut pas killer une victime avec le kill de cette dernière.</br></br>
        Attention, c'est le cas uniquement au 1er tour. Après quelques kills vous tomberez forcèment dans ce cas de figure.</br>
      </p>


      <a class="subtitle rules-link" onclick="goBack()">Retour à la partie</a>
  </section>
  <script>
    function goBack() {
      window.history.back();
    }
  </script>
  <script>
  "use strict";

  !function() {==
    var t = window.driftt = window.drift = window.driftt || [];
    if (!t.init) {
      if (t.invoked) return void (window.console && console.error && console.error("Drift snippet included twice."));
      t.invoked = !0, t.methods = [ "identify", "config", "track", "reset", "debug", "show", "ping", "page", "hide", "off", "on" ], 
      t.factory = function(e) {
        return function() {
          var n = Array.prototype.slice.call(arguments);
          return n.unshift(e), t.push(n), t;
        };
      }, t.methods.forEach(function(e) {
        t[e] = t.factory(e);
      }), t.load = function(t) {
        var e = 3e5, n = Math.ceil(new Date() / e) * e, o = document.createElement("script");
        o.type = "text/javascript", o.async = !0, o.crossorigin = "anonymous", o.src = "https://js.driftt.com/include/" + n + "/" + t + ".js";
        var i = document.getElementsByTagName("script")[0];
        i.parentNode.insertBefore(o, i);
      };
    }
  }();
  drift.SNIPPET_VERSION = '0.3.1';
  drift.load('z75nz899he2e');
  </script>
  <!-- End of Async Drift Code -->
</body>
</html>
